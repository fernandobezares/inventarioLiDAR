/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var firms = ee.ImageCollection("FIRMS"),
    firesVis = {"min":325,"max":400,"palette":["red","orange","yellow"]};
/***** End of imports. If edited, may not auto-convert in the playground. *****/
//

var initYear = '2022';
//---------------aoi------------
var regions = ee.FeatureCollection("FAO/GAUL_SIMPLIFIED_500m/2015/level2");
var region = ee.String('Castilla y Le√≥n');
var aoi = regions.filter(ee.Filter.eq('ADM1_NAME', region));


// current time

function getDates() {
  // returns a date list with all the months between the reference date and today
  
  // get date from today
  var now = Date.now();
  var eeNow = ee.Date(now);
  
  // first firms date availability
  // var initDateFires = ee.Date(firms.first().get('system:time_start'));
  
  var initDateFires = ee.Date(initYear);
  
  // get the time difference between the beggining of the firms dataset and now
  var timeDif = eeNow.difference(initDateFires,'months').floor();
  
  // generate a list with all the increment of the months 
  var timeList = ee.List.sequence(0,timeDif);
  
  // get a list with all the dates from the beggining of the firms until now
  var dateList = timeList.map(function(months){
  
    // retunrs a list with the months  
    return initDateFires.advance(months,'months');
  
  });

return ee.List(dateList); 

  
}


//-------------------- Functions ----------------------------

// add a band with the adquisition time

var firmBandDate = function(image){
  
  // get image adquisition time in millis
  var doy = image.date().millis();
  
  // create a band with the date of the image in millis
  var doyBand = ee.Image.constant(doy).toLong().rename('doy');
  
  // mask by the T21 band values 
  doyBand = doyBand.updateMask(image.select('T21').mask());
  
  return image.addBands(doyBand);
};


//---------------------------------------
// raster to vector
var perimeterFire = function(image){
  var perim = image.addBands(ee.Image(1)).reduceToVectors({
    geometry: aoi,
    crs: image.projection(),
    scale: 1000,
    geometryType: 'polygon',
    eightConnected: false,
    labelProperty: 'fire',
    reducer: ee.Reducer.mean()
  });
  return ee.FeatureCollection(perim);
};



// featureCollection with date information
var fireData = function(image, collection){
  
  var red = image.reduceRegions({
    reducer:ee.Reducer.minMax(),
    collection: collection,
    scale: 1000,
    crs: image.projection()
  
    
  });

return ee.FeatureCollection(red);

  
};


function getFiresByMonth(date){
  
  // returns a list with a featureCollections with the polygons corresponding to the 
  // thermal anomalies for each month
  
  
  // get the date as initial date
  var startDate = ee.Date(date);
  
  // the final date is start date + 1 month
  var finalDate = startDate.advance(1,'month');
  
  
  var firmsAOI = firms
                  .filter(ee.Filter.bounds(aoi))
                  .filterDate(startDate, finalDate)
                  .select('T21');
                  
    // add the dates to the firms image in aoi
  var firmDates = firmsAOI.map(firmBandDate);
  
  // composite
  var imageComp = firmDates.mosaic();
  var imageMask = imageComp.gte(300).selfMask();
  
  // obtain the perimeters of the forest fires
  var perimeters = perimeterFire(imageMask);
  
  // extract the fire data information
  var fireDate = fireData(imageComp, perimeters);
                
  
  return fireDate;
  
}
// ------------------------------ Process------------------------------
/*
// get the fires Collection
var fires = getDates().map(getFiresByMonth);

// print('FIRE COLLECTION', fires);
// print('FIRE COLLECTION JULY', fires.get(6));

// Flatten the collection
var fires = ee.FeatureCollection(fires).flatten();

// print('FIRE COLLECTION FLATTENED', fires);

// filter by month
var firesJuly = fires.filter(
  ee.Filter.and(
    ee.Filter.gte('doy_min',ee.Date('2022-07-01').millis()),
    ee.Filter.lt('doy_min',ee.Date('2022-08-01').millis())
    
    )
    );

// prints

// print('FIRE DATE COLLECTION',fires.aggregate_array('doy_max').map(function(date){return ee.Date(date)}));
// print('FIRES IN JULY', firesJuly);
*/
exports = {'getDates':getDates(), 'getFiresByMonth':getFiresByMonth()};


