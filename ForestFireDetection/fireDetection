/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var firms = ee.ImageCollection("FIRMS"),
    firesVis = {"min":325,"max":400,"palette":["red","orange","yellow"]};
/***** End of imports. If edited, may not auto-convert in the playground. *****/

//---------------aoi------------

var regions = ee.FeatureCollection("FAO/GAUL_SIMPLIFIED_500m/2015/level2");

var region = ee.String('Castilla y Le√≥n');

var cyl= regions.filter(ee.Filter.eq('ADM1_NAME', region));

Map.centerObject(cyl, 8);


//----------FIRMS--------
var startDate = ee.Date ('2022-07-01');
var finalDate = ee.Date ('2022-07-22');

var firmsCyl = firms
                .filter(ee.Filter.bounds(cyl))
                .filterDate(startDate, finalDate)
                .select('T21');
                


//--------------------

// add a band with the adquisition time

var firmBandDate = function(image){
  
  // get image adquisition time in millis
  var doy = image.date().millis();
  
  // create a band with the date of the image in millis
  var doyBand= ee.Image.constant(doy).toLong().rename('doy');
  
  // mask by the T21 band values 
  doyBand = doyBand.updateMask(image.select('T21').mask());
  
  return image.addBands(doyBand);
};

var firmDates = firmsCyl.map(firmBandDate);

//Map.addLayer(firmDates, null, 'firmDates')

//---------------------------------------

// composite

var imageComp = firmDates.mosaic()



var imageMask = imageComp.gte(300).selfMask()



// raster to vector
var perimeterFire = function(image){
  var perim = image.addBands(ee.Image(1)).reduceToVectors({
    geometry: cyl,
    crs: image.projection(),
    scale: 1000,
    geometryType: 'polygon',
    eightConnected: false,
    labelProperty: 'fire',
    reducer: ee.Reducer.mean()
  });
  return ee.FeatureCollection(perim);
};

var perimeters= perimeterFire(imageMask)



/// featureCollection with date information

var fireData= function(image, collection){
  var red= image.reduceRegions({
    reducer:ee.Reducer.minMax(),
    collection: collection,
    scale: 1000,
    crs: image.projection()
  })
return ee.FeatureCollection(red)
}

var fireDate= fireData(imageComp, perimeters)




exports = fireDate;


// prints 

print(firmDates, 'firmDates');
print (imageComp, 'mosaic of fires');
print (imageMask, 'image with integer bands');
print(perimeters, 'perimeters');
print(fireDate, 'fires with reference date');

// Maps

Map.addLayer(imageComp, null, 'mosaic of fires')
Map.addLayer(imageMask, null, 'image with integer bands')
Map.addLayer(perimeters, null, 'fire perimeters')
Map.addLayer(fireDate, null, 'fires with reference date')