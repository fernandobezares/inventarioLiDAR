// funciones de Volumen 
function calculateVolume(All_returns_above_heightbreak_div_Total_first_returns_100,P75) {
  
  // Expression using named variables.
    var vcc_pinos = '(-9.33) + 0.14* a + 0.907309* b';
    
    var vcc = ee.Image().expression({
        expression: vcc_pinos,
        map: {
            a: All_returns_above_heightbreak_div_Total_first_returns_100.select('SR_B5'),
            b: P75
    }
    }).rename('vcc');
  
  return ee.Image(vcc) ;
  
}

// LiDAR variables for the the first coberage
var c1 = { "fcc" : ee.ImageCollection('users/cesefor/InventarioForestal/LiDAR/1C/FCC').mosaic(),
           "elev_95" : ee.ImageCollection('users/cesefor/InventarioForestal/LiDAR/1C/P95').mosaic(),
           "ele_p75" : ee.ImageCollection ('users/cesefor/InventarioForestal/LiDAR/1C/P75').mosaic(),
           "Canopy_Relief_Ratio": ee.ImageCollection ('users/cesefor/InventarioForestal/LiDAR/1C/CRR').mosaic(),
           "vcc": calculateVolume(c1.All_returns_above_heightbreak_div_Total_first_returns_100,c1.Canopy_Relief_ratio),
           "mdav": ee.ImageCollection('users/cesefor/InventarioForestal/LiDAR/1C/MDAV')
           .map(function(image){return image.updateMask(image.neq(0))}).mosaic(),
           
};


// LiDAR variables for the the second coberage
var c2 =  { "fcc" : ee.ImageCollection.fromImages([
                   ee.Image('users/cesefor/InventarioForestal/LiDAR/2C/VALLADOLID_FCC')])
                   .mosaic(),
                   
           "elev_95" : ee.ImageCollection.fromImages([
                   ee.Image('users/cesefor/InventarioForestal/LiDAR/2C/VALLADOLID_Elev_P95')])
                   .mosaic(),
           "Canopy_Relief_Ratio": ee.Image.constant(5)
          
};

exports = {'c1': c1 , 'c2' : c2};