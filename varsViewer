/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var fcc = ee.ImageCollection("users/cesefor/InventarioForestal/LiDAR/1C/FCC"),
    p95 = ee.ImageCollection("users/cesefor/InventarioForestal/LiDAR/1C/P95"),
    mdav = ee.ImageCollection("users/cesefor/InventarioForestal/LiDAR/1C/MDAV");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// import LiDAR Vars
var lidar = require('users/cesefor/inventarioForestal:LiDARVars');

// aoi list
var provinciasNames = ['Ávila','Burgos','León','Palencia','Salamanca','Segovia','Soria','Valladolid','Zamora'];

// aoi datasets 
var cyl = ee.FeatureCollection('users/cesefor/general/adminUnits/LimiteAdmin_CyL');
var cylStyled = cyl.style({color : 'black' , fillColor:'FF000000'});

// cyl Provinces 
var cylP = ee.FeatureCollection('users/cesefor/general/adminUnits/Provincias_ETRS89').filter(ee.Filter.inList('NAMEUNIT',provinciasNames));
var cylPStyled = cylP.style({color : 'black' , fillColor:'FF000000' , lineType : 'dashed', width: 0.7} );



// cargar las fcc
var fcc = fcc.mosaic();

// cargar la p95
var p95 = p95. mosaic();
var mdav = mdav.map(function(image){return image.updateMask(image.neq(0))}).mosaic();

// visualize vars 
Map.addLayer(fcc,{min:0,max:100,palette:['white','lightyellow','lightgreen','green']},'fcc',0);
Map.addLayer(p95,{min:0,max:25,palette:['white','lightyellow','orange','red']},'p95',0);
Map.addLayer(mdav,{min:0,max:25,palette:['white','lightblue','blue','purple']},'mdav',0);

// visualize provinces
Map.addLayer(cylPStyled,{},'Provincias',0);
Map.addLayer(cylStyled,{},'CYL',0);


//check which cover is selected
function checkCoberturas(cobertura){
  
  // check the value of the select cobertura 
  if (cobertura === null){
    
    alert('Selecciona una cobertura');
    
  // if cobertura is not null
  } else {
    
    cobertura = ee.String(cobertura);
    print(cobertura)
    // get teh value of cobertura
    //var cobertura = ee.String(coberturaSelect.getValue());
    
    // if cobertura is equal to 1c then retrieve the keys 
    if (cobertura.compareTo(ee.String('1a Cobertura'))){
      print('True 1a Cobertura')
    
    // return the keys of the 1 cover object
    return Object.keys(lidar.c1);
    
  }else if (cobertura.compareTo(ee.String('2a Cobertura'))){
    
    print('True 2a Cobertura')
    
    // return the keys of the 2 cover object
    return Object.keys(lidar.c2);
    }
  
    
  }
    
}
  
   
  

// 
// ui.Panel
var mainPanel = ui.Panel({layout : ui.Panel.Layout.flow('vertical')});

// Main Title 
var mainTitle = ui.Label('Visor Variables LiDAR');

// Select area
var aoi = ui.Select({
  items: provinciasNames.concat(['Castilla y León']) ,
  onChange: function(name){
    
    // get the name and check
    if (name === 'Castilla y León'){
      
      
      Map.addLayer(cylStyled,{},'CYL');

      
    } else {
      
      
    }
    
    
  }
});

// cover lists
var cobs = ['1a Cobertura','2a Cobertura'];

// ui.Panel for covers 
var buttonPanels = ui.Panel({layout:ui.Panel.Layout.flow('vertical')});


// select Dataset from coberturas 
var datasetSelect = ui.Select({
  items: [],
  placeholder:'Datasets'
});

// loading datasets 
var loadingDatasetSelect = ui.Select({
  items: [],
  placeholder:'Loading...'
});

// Select la cobertura
var coberturaSelect = ui.Select({
  items: cobs,
  //value:'null',
  onChange : function(){}
  
});

// ui.Select coberturas
var coberturaSelect = ui.Select({
  items: cobs,
  //value: '1a Cobertura',
  style: {width: "98%"},
  onChange:function(cover){
    buttonPanels.clear().add(coberturaSelect).add(loadingDatasetSelect);
    var datasets = checkCoberturas(cover);
    ee.List(datasets).evaluate(function(list){
      print(list)
        datasetSelect = ui.Select({
          items: list,
          style: {width: "98%"},
          //value: 'All regions'
        });
    buttonPanels.clear().add(coberturaSelect).add(datasetSelect); 
    });
  }
});
      
buttonPanels.clear().add(coberturaSelect).add(datasetSelect);


/*
//Select las varaibles por cobertura
ee.String(coberturaSelect.getValue()).evaluate(function(cover){
  
print('Cover', cover);

// create the ui.Select according to the cobertura seelct value
var v = ui.Select({
  items :checkCoberturas(cover)
  });
  
  mainPanel.add(v)


});

*/


// add widgets to panel 

mainPanel.add(mainTitle).add(buttonPanels)

ui.root.add(mainPanel)