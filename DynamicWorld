/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #d63000 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-2.5298848730399226, 42.12483999739867],
          [-2.5298848730399226, 42.05324649227032],
          [-2.4361577612235163, 42.05324649227032],
          [-2.4361577612235163, 42.12483999739867]]], null, false),
    image = ee.Image("AHN/AHN2_05M_INT");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var beforeYear = 2019;
var afterYear = 2020;

var beforeStart = ee.Date.fromYMD(beforeYear, 11, 1);
var beforeEnd = beforeStart.advance(2, 'month');

var afterStart = ee.Date.fromYMD(afterYear, 11, 1);
var afterEnd = afterStart.advance(2, 'month');

var dw = ee.ImageCollection('GOOGLE/DYNAMICWORLD/V1')
             .filterBounds(geometry)
             //.select('trees');

var beforeDw = dw.filterDate(beforeStart, beforeEnd).mean();
var afterDw = dw.filterDate(afterStart, afterEnd).mean();
print(beforeDw)




var dwVisParams = {
  min: 0,
  max: 8,
  palette: [
    '#419BDF', '#397D49', '#88B053', '#7A87C6', '#E49635', '#DFC35A',
    '#C4281B', '#A59B8F', '#B39FE1'
  ]
};





// Select all pixels that are
// < 0.2 'built' probability before
// > 0.5 'built' probability after
var newUrban = beforeDw.lt(0.2).and(afterDw.gt(0.5));

var changeVisParams = {min: 0, max: 1, palette: ['white', 'red']};
Map.addLayer(newUrban.clip(geometry), changeVisParams, 'New Urban');

Map.addLayer(beforeDw.select('label'),dwVisParams,'beforeDw');
Map.addLayer(afterDw.select('label'),dwVisParams,'afterDw');